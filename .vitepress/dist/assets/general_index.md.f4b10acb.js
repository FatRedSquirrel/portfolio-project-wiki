import{_ as e,o as r,c as t,O as a}from"./chunks/framework.571309da.js";const f=JSON.parse('{"title":"Основная информация","description":"","frontmatter":{},"headers":[],"relativePath":"general/index.md","filePath":"general/index.md"}'),o={name:"general/index.md"},n=a('<h1 id="основная-информация" tabindex="-1">Основная информация <a class="header-anchor" href="#основная-информация" aria-label="Permalink to &quot;Основная информация&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Ниже представлено краткое описание проекта, а также технологий, которые в нем использованы</p></div><h2 id="архитектура" tabindex="-1">Архитектура <a class="header-anchor" href="#архитектура" aria-label="Permalink to &quot;Архитектура&quot;">​</a></h2><p>Проект написан в соответствии с методологией Feature sliced design</p><p>Ссылка на документацию - <a href="https://feature-sliced.design/docs/get-started/tutorial" target="_blank" rel="noreferrer">feature sliced design</a></p><h2 id="основные-технологии" tabindex="-1">Основные технологии: <a class="header-anchor" href="#основные-технологии" aria-label="Permalink to &quot;Основные технологии:&quot;">​</a></h2><ul><li><strong>Фреймворк</strong> - React</li><li><strong>ЯП</strong> - typescript</li><li><strong>Стили</strong> - scss modules</li><li><strong>Сборщик</strong> - в основном Webpack, иногда для dev режима - Vite</li><li><strong>Транспилятор</strong> - Babel</li><li><strong>Линтинг</strong> - ESLint, Stylelint</li><li><strong>State manager</strong> - Redux (toolkit)</li><li><strong>Взаимодействие с API</strong> - axios, redux async thunk, RTK query</li><li><strong>Витрина UI компонентов (deprecated &amp; redesigned)</strong> - <a href="https://fatredsquirrel.github.io/production-project/" target="_blank" rel="noreferrer">Storybook</a></li><li><strong>Тесты</strong> - Jest, RTL, Cypress</li><li><strong>Локализация</strong> - i18next</li><li><strong>Простой backend</strong> - json server</li></ul><h2 id="краткое-описание" tabindex="-1">Краткое описание: <a class="header-anchor" href="#краткое-описание" aria-label="Permalink to &quot;Краткое описание:&quot;">​</a></h2><p>Проект настроен и собран с нуля без использования <strong>cra</strong> или прочих подобных решений. <a href="/configs/webpack/">Webpack</a> и <a href="/configs/babel/">Babel</a> также настроены руками с нуля. <strong>Vite</strong> используется как дополнительный сборщик и только в dev режиме - из-за сравнительно высокой скорости работы.</p><p>В проекте есть <strong>2 дизайн системы</strong> - старая и новая. Реализовано переключение систем по <a href="/common/feature-flags/">Feature Flags</a> схеме, где у одних пользователей система старая, у других - новая. Настроены скрипты, которые выпиливают ненужный код: старую фичу, если была принята новая, и новую - если от нее решили отказаться.</p><p>Все страницы подключены асинхронно, некоторые редаск редьюсеры также подключаются асинхронно с помощью <strong>reducerManager</strong> и кастомного компонента <strong>DynamicModuleLoader</strong> для максимальной оптимизации веса основного бандла. <a href="/common/async/">Подробнее</a></p><p>На гитхабе проекта настроен <a href="/CI/">CI</a>, который работает на пуши и мердж реквесты в <strong>main</strong> ветку.</p><p>Так как проект направлен в первую очередь на изучение frontend&#39;а, backend у него очень простой, сделанный с помощью сервиса <a href="https://www.npmjs.com/package/json-server" target="_blank" rel="noreferrer">JSON Server</a>. Из-за ограничений сервиса в проде он не работет с мутирующими данные запросами.</p>',13),s=[n];function i(l,c,d,g,p,h){return r(),t("div",null,s)}const _=e(o,[["render",i]]);export{f as __pageData,_ as default};
